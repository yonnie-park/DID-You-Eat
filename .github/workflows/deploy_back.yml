name: express docker deploy
on:
  push: # push 이벤트 발생 시
    branches: # 브랜치 설정
      - main
      - dev
    paths: # 경로 설정
      - server/**
  workflow_dispatch: # 직접실행 옵션

env:
  DOCKER_IMAGE: ghcr.io/yonnie-park/beb-07-final-didyoueat
  CONTAINER_NAME: express_api

jobs:
  build: # job id
    env:
      CI: false # warning 무시
      working-directory: ./server

    name: docker build # job 이름
    runs-on: ubuntu-latest # 실행환경
    defaults:
      run:
        working-directory: "./server" # 기본 경로 설정
    steps:
      - name: checkout code # 레포지토리 파일 받아옴
        uses: actions/checkout@v3.3.0

      - name: Set up Docker Buildx # buildx setting
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: DongMinKwon
          password: ${{secrets.CR_PAT}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{env.working-directory}} # server경로로 context 설정
          file: ${{env.working-directory}}/Dockerfile #Dockerfile 경로
          platforms: linux/amd64
          push: true
          tags: ${{env.DOCKER_IMAGE}}:latest
          cache-from: type=gha # github action용 docker 캐시 적용
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, label-development]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: DongMinKwon
          password: ${{secrets.CR_PAT}}

      - name: Docker run
        run: |
          docker stop ${{env.CONTAINER_NAME}} && docker rm ${{env.CONTAINER_NAME}} && docker rmi ${{env.DOCKER_IMAGE}}
          docker run -d -p 80:3000 \
           -e DATABASE_URL=${{secrets.DATABASE_URL}} \
           --name ${{env.CONTAINER_NAME}} --restart always ${{env.DOCKER_IMAGE}}:latest
